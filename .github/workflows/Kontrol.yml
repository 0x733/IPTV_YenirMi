# Bu araç @keyiflerolsun tarafından | @KekikAkademi için yazılmıştır.

name: Yayın Kontrolü

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: 00 00 * * *
  push:
    paths:
      - KONTROL.py
      - .github/workflows/Kontrol.yml
      - Kanallar/KekikAkademi.m3u

jobs:
  YayinKontrol:
    #runs-on: ubuntu-latest
    runs-on: self-hosted

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: write
      issues  : write

    steps:
      - name : Depo Kontrolü
        uses : actions/checkout@v4.2.2

      - name : Python 3.11.8 Yükle
        uses : actions/setup-python@v5.3.0
        with :
          python-version: 3.11.8

      - name : Python Sürümünü Göster
        run  : python -c "import sys; print(sys.version)"

      - name : Gereksinimleri Yükle
        run  : |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel Kekik httpx jq

      - name : Betiği Çalıştır
        run  : |
          python KONTROL.py

      - name : Mevcut Issue İçeriğini Al
        id   : mevcut_issue_icerik
        run  : |
          mevcut_issue=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues \
            | jq -r '.[] | select(.title == "⚠️ Kontrol Edilmesi Gereken Yayınlar") | .number')

          if [ -n "$mevcut_issue" ]; then
            icerik=$(curl -s \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$mevcut_issue \
              | jq -sR .)

            echo "icerik=$icerik" >> $GITHUB_OUTPUT
          else
            echo "icerik=\"\"" >> $GITHUB_OUTPUT
          fi

      - name : İçerik Karşılaştır
        id   : icerik_karsilastir
        run  : |
          hatalar=$(cat HATALAR.md)
          yeni_icerik=$(echo "$hatalar" | jq -sR .)
          mevcut_icerik="${{ steps.mevcut_issue_icerik.outputs.icerik }}"

          if [ "$yeni_icerik" = "$mevcut_icerik" ]; then
            echo "degisiklik=false" >> $GITHUB_OUTPUT
          else
            echo "degisiklik=true" >> $GITHUB_OUTPUT
          fi

      - name : Mevcut Issue'ları Kontrol Et ve Kapat
        if   : steps.icerik_karsilastir.outputs.degisiklik == 'true'
        run  : |
          mevcut_issue=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues \
            | jq -r '.[] | select(.title == "⚠️ Kontrol Edilmesi Gereken Yayınlar") | .number')

          if [ -n "$mevcut_issue" ]; then
            curl -X PATCH \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$mevcut_issue \
              -d '{"state":"closed"}'
          fi

      - name : Issue Aç
        if   : steps.icerik_karsilastir.outputs.degisiklik == 'true'
        run  : |
          hatalar=$(cat HATALAR.md)
          issue_body=$(echo "$hatalar" | jq -sR .)

          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues \
            -d '{"title":"⚠️ Kontrol Edilmesi Gereken Yayınlar","body":'"$issue_body"',"labels":["help wanted"]}'